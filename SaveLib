-- SaveLib ModuleScript
-- Place this ModuleScript in ReplicatedStorage (or desired location) and require it to build your UI

local SaveLib = {}
SaveLib.__index = SaveLib

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Internal helper for creating UICorner
local function addCorner(frame, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 5)
    corner.Parent = frame
    return corner
end

-- Creates the main UI window
function SaveLib:CreateSaveLib(libName)
    libName = libName or "Save Lib"
    local self = setmetatable({}, SaveLib)
    self.Name = libName
    self.Tabs = {}

    -- ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = libName
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = game:GetService("CoreGui")
    self.ScreenGui = screenGui

    -- Main frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 500, 0, 350)
    mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.Parent = screenGui
    addCorner(mainFrame, 8)
    self.MainFrame = mainFrame

    -- Header
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 40)
    header.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    header.Parent = mainFrame
    addCorner(header, 8)

    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, -40, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 0)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBold
    title.Text = libName
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextSize = 18
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header

    local closeBtn = Instance.new("ImageButton")
    closeBtn.Name = "CloseButton"
    closeBtn.Size = UDim2.new(0, 24, 0, 24)
    closeBtn.Position = UDim2.new(1, -30, 0.5, -12)
    closeBtn.Image = "rbxassetid://5165666242" -- close icon
    closeBtn.BackgroundTransparency = 1
    closeBtn.Parent = header
    closeBtn.MouseButton1Click:Connect(function()
        screenGui.Enabled = not screenGui.Enabled
    end)

    -- Drag functionality
    local dragging, dragStart, startPos
    header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    header.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            UserInputService.InputChanged:Connect(function(move)
                if dragging and move.UserInputType == Enum.UserInputType.MouseMovement then
                    local delta = move.Position - dragStart
                    mainFrame.Position = UDim2.new(0, startPos.X.Offset + delta.X, 0, startPos.Y.Offset + delta.Y)
                end
            end)
        end
    end)

    -- Tab container
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(0, 100, 1, -40)
    tabContainer.Position = UDim2.new(0, 0, 0, 40)
    tabContainer.BackgroundTransparency = 1
    tabContainer.Parent = mainFrame

    local tabLayout = Instance.new("UIListLayout")
    tabLayout.Parent = tabContainer
    tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabLayout.Padding = UDim.new(0, 4)

    -- Page container
    local pageContainer = Instance.new("Frame")
    pageContainer.Name = "PageContainer"
    pageContainer.Size = UDim2.new(1, -100, 1, -40)
    pageContainer.Position = UDim2.new(0, 100, 0, 40)
    pageContainer.BackgroundTransparency = 1
    pageContainer.Parent = mainFrame

    self.TabContainer = tabContainer
    self.PageContainer = pageContainer

    return self
end

-- Create a new tab
function SaveLib:CreateTab(tabName)
    assert(self, "Use colon syntax: SaveLibInstance:CreateTab(name)")
    local tabButton = Instance.new("TextButton")
    tabButton.Name = tabName
    tabButton.Size = UDim2.new(1, 0, 0, 30)
    tabButton.BackgroundColor3 = Color3.fromRGB(40,40,40)
    tabButton.Font = Enum.Font.Gotham
    tabButton.TextSize = 14
    tabButton.Text = tabName
    tabButton.TextColor3 = Color3.new(1,1,1)
    tabButton.Parent = self.TabContainer

    local pageFrame = Instance.new("ScrollingFrame")
    pageFrame.Name = tabName .. "Page"
    pageFrame.Size = UDim2.new(1, 0, 1, 0)
    pageFrame.CanvasSize = UDim2.new(0,0,0,0)
    pageFrame.ScrollBarThickness = 4
    pageFrame.BackgroundTransparency = 1
    pageFrame.Visible = false
    pageFrame.Parent = self.PageContainer

    local layout = Instance.new("UIListLayout")
    layout.Parent = pageFrame
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 5)

    -- Auto-update canvas size
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        pageFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
    end)

    -- Tab click
    tabButton.MouseButton1Click:Connect(function()
        for _, v in ipairs(self.PageContainer:GetChildren()) do
            if v:IsA("ScrollingFrame") then v.Visible = false end
        end
        pageFrame.Visible = true
    end)

    table.insert(self.Tabs, {Button = tabButton, Page = pageFrame})
    -- If first tab, activate
    if #self.Tabs == 1 then
        tabButton:MouseButton1Click():Wrap()
    end

    return pageFrame
end

-- Add a button to a page
function SaveLib:AddButton(page, text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.Text = text or "Button"
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Parent = page
    addCorner(btn, 5)
    btn.MouseButton1Click:Connect(function()
        pcall(callback)
    end)
    return btn
end

-- Add a toggle to a page
function SaveLib:AddToggle(page, text, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 30)
    frame.BackgroundTransparency = 1
    frame.Parent = page

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.8,0,1,0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.Text = text or "Toggle"
    label.TextColor3 = Color3.new(1,1,1)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 30, 0, 30)
    btn.Position = UDim2.new(1,-35,0,0)
    btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
    btn.Text = ""
    btn.Parent = frame
    addCorner(btn, 5)

    local toggled = false
    btn.MouseButton1Click:Connect(function()
        toggled = not toggled
        TweenService:Create(btn, TweenInfo.new(0.15), {BackgroundColor3 = toggled and Color3.fromRGB(181,1,31) or Color3.fromRGB(60,60,60)}):Play()
        pcall(callback, toggled)
    end)

    return btn
end

-- Add a slider to a page
function SaveLib:AddSlider(page, text, min, max, callback)
    min = min or 0; max = max or 100
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 40)
    frame.BackgroundTransparency = 1
    frame.Parent = page

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.6,0,0,20)
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.Text = text or "Slider"
    label.TextColor3 = Color3.new(1,1,1)
    label.BackgroundTransparency = 1
    label.Parent = frame

    local valueLabel = Instance.new("TextLabel")
    valueLabel.Size = UDim2.new(0.3,0,0,20)
    valueLabel.Position = UDim2.new(0.65,0,0,0)
    valueLabel.Font = Enum.Font.Gotham
    valueLabel.TextSize = 14
    valueLabel.Text = tostring(min)
    valueLabel.TextColor3 = Color3.new(1,1,1)
    valueLabel.BackgroundTransparency = 1
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.Parent = frame

    local sliderBg = Instance.new("Frame")
    sliderBg.Size = UDim2.new(1,-20,0,10)
    sliderBg.Position = UDim2.new(0,10,0,25)
    sliderBg.BackgroundColor3 = Color3.fromRGB(60,60,60)
    sliderBg.Parent = frame
    addCorner(sliderBg, 5)

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new(0,0,1,0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(181,1,31)
    sliderFill.Parent = sliderBg
    addCorner(sliderFill, 5)

    local dragging = false
    local function updateSlider(input)
        local pos = math.clamp(input.Position.X - sliderBg.AbsolutePosition.X, 0, sliderBg.AbsoluteSize.X)
        local fraction = pos / sliderBg.AbsoluteSize.X
        local value = math.floor(min + (max - min) * fraction)
        sliderFill.Size = UDim2.new(fraction,0,1,0)
        valueLabel.Text = tostring(value)
        pcall(callback, value)
    end

    sliderBg.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            updateSlider(input)
        end
    end)
    sliderBg.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateSlider(input)
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    return sliderBg
end

return SaveLib
