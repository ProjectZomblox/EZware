-- SaveLib ModuleScript
-- Load via: loadstring(game:HttpGet("https://raw.githubusercontent.com/ProjectZomblox/EZware/refs/heads/main/SaveLib"))()

local SaveLib = {}
SaveLib.__index = SaveLib

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Helper: Create UICorner
local function addCorner(frame, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 6)
    corner.Parent = frame
    return corner
end

-- Helper: Tween utility
local function tween(instance, props, duration)
    TweenService:Create(instance, TweenInfo.new(duration or 0.2, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), props):Play()
end

-- Create main UI
function SaveLib:CreateSaveLib(libName)
    libName = libName or "Save Lib"
    local self = setmetatable({Tabs = {}, Themes = {}}, SaveLib)

    -- ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = libName
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = game:GetService("CoreGui")
    self.ScreenGui = screenGui

    -- Main Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 550, 0, 380)
    mainFrame.Position = UDim2.new(0.5, -275, 0.5, -190)
    mainFrame.BackgroundColor3 = Color3.fromRGB(28,28,28)
    mainFrame.BackgroundTransparency = 1
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui
    addCorner(mainFrame, 8)
    self.MainFrame = mainFrame

    -- Intro animation
    tween(mainFrame, {BackgroundTransparency = 0}, 0.4)

    -- Header
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 40)
    header.BackgroundColor3 = Color3.fromRGB(45,45,45)
    header.Parent = mainFrame
    addCorner(header, 8)

    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, -60, 1, 0)
    title.Position = UDim2.new(0, 20, 0, 0)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBlack
    title.TextSize = 20
    title.Text = libName
    title.TextColor3 = Color3.new(1,1,1)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header

    local closeBtn = Instance.new("ImageButton")
    closeBtn.Name = "CloseBtn"
    closeBtn.Size = UDim2.new(0, 24, 0, 24)
    closeBtn.Position = UDim2.new(1, -34, 0.5, -12)
    closeBtn.Image = "rbxassetid://5165666242"
    closeBtn.BackgroundTransparency = 1
    closeBtn.Parent = header
    closeBtn.MouseButton1Click:Connect(function()
        tween(mainFrame, {BackgroundTransparency = 1}, 0.3)
        wait(0.3)
        screenGui:Destroy()
    end)

    -- Drag functionality
    do
        local dragging, dragStart, startPos
        header.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = mainFrame.Position
            end
        end)
        header.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                UserInputService.InputChanged:Connect(function(move)
                    if dragging and move.UserInputType == Enum.UserInputType.MouseMovement then
                        local delta = move.Position - dragStart
                        mainFrame.Position = UDim2.new(0, startPos.X.Offset + delta.X, 0, startPos.Y.Offset + delta.Y)
                    end
                end)
            end
        end)
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
    end

    -- Containers
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(0, 120, 1, -40)
    tabContainer.Position = UDim2.new(0, 0, 0, 40)
    tabContainer.BackgroundTransparency = 1
    tabContainer.Parent = mainFrame
    local tabLayout = Instance.new("UIListLayout", tabContainer)
    tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabLayout.Padding = UDim.new(0, 4)

    local pageContainer = Instance.new("Frame")
    pageContainer.Name = "PageContainer"
    pageContainer.Size = UDim2.new(1, -120, 1, -40)
    pageContainer.Position = UDim2.new(0, 120, 0, 40)
    pageContainer.BackgroundTransparency = 1
    pageContainer.Parent = mainFrame

    self.TabContainer = tabContainer
    self.PageContainer = pageContainer

    return self
end

-- Create a new tab/page
function SaveLib:CreateTab(tabName)
    assert(self.MainFrame, "Call CreateSaveLib first")
    local btn = Instance.new("TextButton")
    btn.Name = tabName
    btn.Size = UDim2.new(1, 0, 0, 28)
    btn.BackgroundColor3 = Color3.fromRGB(40,40,40)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 15
    btn.Text = tabName
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Parent = self.TabContainer
    addCorner(btn, 6)

    local page = Instance.new("ScrollingFrame")
    page.Name = tabName.."Page"
    page.Size = UDim2.new(1, 0, 1, 0)
    page.CanvasSize = UDim2.new(0,0,0,0)
    page.ScrollBarThickness = 6
    page.BackgroundTransparency = 1
    page.Visible = false
    page.Parent = self.PageContainer
    local layout = Instance.new("UIListLayout", page)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 6)
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        page.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 20)
    end)

    btn.MouseButton1Click:Connect(function()
        for _,v in pairs(self.PageContainer:GetChildren()) do
            if v:IsA("ScrollingFrame") then v.Visible = false end
        end
        page.Visible = true
        for _,b in pairs(self.TabContainer:GetChildren()) do
            if b:IsA("TextButton") then tween(b, {BackgroundColor3 = Color3.fromRGB(40,40,40)}) end
        end
        tween(btn, {BackgroundColor3 = Color3.fromRGB(181,1,31)})
    end)

    table.insert(self.Tabs, {Button = btn, Page = page})
    if #self.Tabs == 1 then btn:MouseButton1Click() end
    return page
end

-- Button
function SaveLib:AddButton(page, text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.Text = text or "Button"
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Parent = page
    addCorner(btn, 6)
    btn.MouseButton1Click:Connect(function() pcall(callback) end)
    return btn
end

-- Toggle
function SaveLib:AddToggle(page, text, callback)
    local frame = Instance.new("Frame") frame.Size = UDim2.new(1,0,0,28) frame.BackgroundTransparency=1 frame.Parent=page
    local lbl = Instance.new("TextLabel") lbl.Size=UDim2.new(0.75,0,1,0) lbl.BackgroundTransparency=1 lbl.Font=Enum.Font.Gotham lbl.TextSize=14 lbl.Text=text or"Toggle" lbl.TextColor3=Color3.new(1,1,1) lbl.TextXAlignment=Enum.TextXAlignment.Left lbl.Parent=frame
    local btn = Instance.new("TextButton") btn.Size=UDim2.new(0,30,0,30) btn.Position=UDim2.new(1,-34,0,-1) btn.BackgroundColor3=Color3.fromRGB(60,60,60) btn.Text="" btn.Parent=frame addCorner(btn,6)
    local state=false; btn.MouseButton1Click:Connect(function() state=not state tween(btn,{BackgroundColor3= state and Color3.fromRGB(181,1,31) or Color3.fromRGB(60,60,60)}) pcall(callback,state) end)
    return btn
end

-- Slider
function SaveLib:AddSlider(page, text, min, max, callback)
    min,max = min or 0,max or 100
    local frame=Instance.new("Frame") frame.Size=UDim2.new(1,0,0,40) frame.BackgroundTransparency=1 frame.Parent=page
    local lbl=Instance.new("TextLabel") lbl.Size=UDim2.new(0.5,0,0,20) lbl.Font=Enum.Font.Gotham lbl.TextSize=14 lbl.Text=text or"Slider" lbl.TextColor3=Color3.new(1,1,1) lbl.BackgroundTransparency=1 lbl.Parent=frame
    local valLbl=Instance.new("TextLabel") valLbl.Size=UDim2.new(0.2,0,0,20) valLbl.Position=UDim2.new(0.75,0,0,0) valLbl.Font=Enum.Font.Gotham valLbl.TextSize=14 valLbl.Text=tostring(min) valLbl.TextColor3=Color3.new(1,1,1) valLbl.BackgroundTransparency=1 valLbl.TextXAlignment=Enum.TextXAlignment.Right valLbl.Parent=frame
    local bg=Instance.new("Frame") bg.Size=UDim2.new(1,-20,0,10) bg.Position=UDim2.new(0,10,0,25) bg.BackgroundColor3=Color3.fromRGB(60,60,60) bg.Parent=frame addCorner(bg,6)
    local fill=Instance.new("Frame") fill.Size=UDim2.new(0,0,1,0) fill.BackgroundColor3=Color3.fromRGB(181,1,31) fill.Parent=bg addCorner(fill,6)
    local dragging=false
    local function update(input)
        local x=math.clamp(input.Position.X-bg.AbsolutePosition.X,0,bg.AbsoluteSize.X)
        local frac=x/bg.AbsoluteSize.X local val=math.floor(min+(max-min)*frac)
        fill.Size=UDim2.new(frac,0,1,0) valLbl.Text=tostring(val) pcall(callback,val)
    end
    bg.InputBegan:Connect(function(i) if i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true; update(i) end end)
    bg.InputChanged:Connect(function(i) if dragging and i.UserInputType==Enum.UserInputType.MouseMovement then update(i) end end)
    UserInputService.InputEnded:Connect(function(i) if dragging and i.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end end)
    return bg
end

-- Dropdown
function SaveLib:AddDropdown(page, text, options, callback)
    local frame=Instance.new("Frame") frame.Size=UDim2.new(1,0,0,30) frame.BackgroundTransparency=1 frame.Parent=page
    local lbl=Instance.new("TextLabel") lbl.Size=UDim2.new(0.4,0,1,0) lbl.BackgroundTransparency=1 lbl.Font=Enum.Font.Gotham lbl.TextSize=14 lbl.Text=text or"Dropdown" lbl.TextColor3=Color3.new(1,1,1) lbl.TextXAlignment=Enum.TextXAlignment.Left lbl.Parent=frame
    local btn=Instance.new("TextButton") btn.Size=UDim2.new(0,150,0,30) btn.Position=UDim2.new(1,-160,0,0) btn.BackgroundColor3=Color3.fromRGB(60,60,60) btn.Text=options[1] or"" btn.Font=Enum.Font.Gotham btn.TextSize=14 btn.TextColor3=Color3.new(1,1,1) btn.Parent=frame addCorner(btn,6)
    local dropFrame=Instance.new("Frame") dropFrame.Size=UDim2.new(0,150,#options*30,30) dropFrame.Position=UDim2.new(1,-160,0,30) dropFrame.BackgroundColor3=Color3.fromRGB(60,60,60) dropFrame.Visible=false dropFrame.Parent=frame addCorner(dropFrame,6)
    for i,opt in ipairs(options) do
        local item=Instance.new("TextButton") item.Size=UDim2.new(1,0,0,30) item.Position=UDim2.new(0,0,(i-1)*30,0) item.BackgroundTransparency=1 item.Font=Enum.Font.Gotham item.TextSize=14 item.Text=opt item.TextColor3=Color3.new(1,1,1) item.Parent=dropFrame
        item.MouseButton1Click:Connect(function()
            btn.Text=opt dropFrame.Visible=false pcall(callback,opt)
        end)
    end
    btn.MouseButton1Click:Connect(function() dropFrame.Visible=not dropFrame.Visible end)
    return btn
end

-- Color Picker
function SaveLib:AddColorPicker(page, text, defaultColor, callback)
    local frame=Instance.new("Frame") frame.Size=UDim2.new(1,0,0,30) frame.BackgroundTransparency=1 frame.Parent=page
    local lbl=Instance.new("TextLabel") lbl.Size=UDim2.new(0.4,0,1,0) lbl.BackgroundTransparency=1 lbl.Font=Enum.Font.Gotham lbl.TextSize=14 lbl.Text=text or"ColorPicker" lbl.TextColor3=Color3.new(1,1,1) lbl.TextXAlignment=Enum.TextXAlignment.Left lbl.Parent=frame
    local btn=Instance.new("TextButton") btn.Size=UDim2.new(0,30,0,30) btn.Position=UDim2.new(1,-40,0,0) btn.BackgroundColor3=defaultColor or Color3.new(1,0,0) btn.Parent=frame addCorner(btn,6)
    btn.MouseButton1Click:Connect(function()
        -- simplistic: cycles hue
        local h = (tick()%1)
        local col = Color3.fromHSV(h,1,1)
        btn.BackgroundColor3=col pcall(callback,col)
    end)
    return btn
end

-- Keybind
function SaveLib:AddKeybind(page, text, defaultKey, callback)
    local frame=Instance.new("Frame") frame.Size=UDim2.new(1,0,0,30) frame.BackgroundTransparency=1 frame.Parent=page
    local lbl=Instance.new("TextLabel") lbl.Size=UDim2.new(0.4,0,1,0) lbl.BackgroundTransparency=1 lbl.Font=Enum.Font.Gotham lbl.TextSize=14 lbl.Text=text or"Keybind" lbl.TextColor3=Color3.new(1,1,1) lbl.TextXAlignment=Enum.TextXAlignment.Left lbl.Parent=frame
    local btn=Instance.new("TextButton") btn.Size=UDim2.new(0,80,0,30) btn.Position=UDim2.new(1,-90,0,0) btn.BackgroundColor3=Color3.fromRGB(60,60,60) btn.Text=defaultKey or"Key" btn.Font=Enum.Font.Gotham btn.TextSize=14 btn.TextColor3=Color3.new(1,1,1) btn.Parent=frame addCorner(btn,6)
    btn.MouseButton1Click:Connect(function()
        btn.Text="..."
        local conn
        conn = UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType==Enum.UserInputType.Keyboard then
                btn.Text=input.KeyCode.Name conn:Disconnect() pcall(callback,input.KeyCode) end
        end)
    end)
    return btn
end

-- TextBox
function SaveLib:AddTextBox(page, text, placeholder, callback)
    local frame=Instance.new("Frame") frame.Size=UDim2.new(1,0,0,30) frame.BackgroundTransparency=1 frame.Parent=page
    local lbl=Instance.new("TextLabel") lbl.Size=UDim2.new(0.4,0,1,0) lbl.BackgroundTransparency=1 lbl.Font=Enum.Font.Gotham lbl.TextSize=14 lbl.Text=text or"TextBox" lbl.TextColor3=Color3.new(1,1,1) lbl.TextXAlignment=Enum.TextXAlignment.Left lbl.Parent=frame
    local box=Instance.new("TextBox") box.Size=UDim2.new(0,180,0,30) box.Position=UDim2.new(1,-190,0,0) box.BackgroundColor3=Color3.fromRGB(60,60,60) box.PlaceholderText=placeholder or"" box.Font=Enum.Font.Gotham box.TextSize=14 box.TextColor3=Color3.new(1,1,1) box.Parent=frame addCorner(box,6)
    box.FocusLost:Connect(function(enter)
        if enter then pcall(callback,box.Text) end
    end)
    return box
end

-- Theme manager
function SaveLib:RegisterTheme(name, themeTable) self.Themes[name]=themeTable end
function SaveLib:ApplyTheme(name)
    local theme=self.Themes[name] if not theme then return end
    -- iterate elements and apply
end

-- Notifications
function SaveLib:Notify(title,message,duration)
    -- basic toast: omitted for brevity
end

-- Prompt
function SaveLib:Prompt(title,message,confirmText,callback)
    -- modal: omitted
end

return SaveLib
