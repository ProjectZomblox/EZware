-- SaveLib ModuleScript (Enhanced with full customization and Settings page)
-- Load via: loadstring(game:HttpGet("https://raw.githubusercontent.com/ProjectZomblox/EZware/refs/heads/main/SaveLib"))()

local SaveLib = {}
SaveLib.__index = SaveLib

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Configuration storage (in-memory, extend to DataStore as needed)
SaveLib.Config = {
    Theme = "Default",
    Keybinds = {},
    Settings = {},
}

-- Helper: Create UICorner
local function addCorner(frame, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 6)
    corner.Parent = frame
    return corner
end
-- Helper: Tween utility
local function tween(instance, props, duration)
    TweenService:Create(instance, TweenInfo.new(duration or 0.2, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), props):Play()
end

-- Main initializer
function SaveLib:CreateSaveLib(libName)
    libName = libName or "Save Lib"
    local self = setmetatable({Tabs = {}, Themes = {}, _pages = {}}, SaveLib)
    -- ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = libName
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = game:GetService("CoreGui")
    self.ScreenGui = screenGui
    -- Main frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 550, 0, 420)
    mainFrame.Position = UDim2.new(0.5, -275, 0.5, -210)
    mainFrame.BackgroundColor3 = Color3.fromRGB(28,28,28)
    mainFrame.BackgroundTransparency = 1
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui
    addCorner(mainFrame, 8)
    self.MainFrame = mainFrame
    tween(mainFrame, {BackgroundTransparency = 0}, 0.4)
    -- Header
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 40)
    header.BackgroundColor3 = Color3.fromRGB(45,45,45)
    header.Parent = mainFrame
    addCorner(header, 8)
    -- Title
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, -100, 1, 0)
    title.Position = UDim2.new(0, 20, 0, 0)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBlack
    title.TextSize = 20
    title.Text = libName
    title.TextColor3 = Color3.new(1,1,1)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header
    -- Close button
    local closeBtn = Instance.new("ImageButton")
    closeBtn.Name = "CloseBtn"
    closeBtn.Size = UDim2.new(0, 24, 0, 24)
    closeBtn.Position = UDim2.new(1, -34, 0.5, -12)
    closeBtn.Image = "rbxassetid://5165666242"
    closeBtn.BackgroundTransparency = 1
    closeBtn.Parent = header
    closeBtn.MouseButton1Click:Connect(function()
        tween(mainFrame, {BackgroundTransparency = 1}, 0.3)
        wait(0.3)
        screenGui:Destroy()
    end)
    -- Settings toggle button (cog icon)
    local settingsBtn = Instance.new("ImageButton")
    settingsBtn.Name = "SettingsBtn"
    settingsBtn.Size = UDim2.new(0, 24, 0, 24)
    settingsBtn.Position = UDim2.new(1, -64, 0.5, -12)
    settingsBtn.Image = "rbxassetid://6023426915" -- cog icon
    settingsBtn.BackgroundTransparency = 1
    settingsBtn.Parent = header
    -- Drag functionality
    do
        local dragging, dragStart, startPos
        header.InputBegan:Connect(function(input)
            if input.UserInputType==Enum.UserInputType.MouseButton1 then
                dragging=true; dragStart=input.Position; startPos=mainFrame.Position
            end
        end)
        header.InputChanged:Connect(function(input)
            if input.UserInputType==Enum.UserInputType.MouseMovement then
                UserInputService.InputChanged:Connect(function(move)
                    if dragging and move.UserInputType==Enum.UserInputType.MouseMovement then
                        local delta=move.Position-dragStart
                        mainFrame.Position=UDim2.new(0,startPos.X.Offset+delta.X,0,startPos.Y.Offset+delta.Y)
                    end
                end)
            end
        end)
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end
        end)
    end
    -- Containers
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(0, 120, 1, -40)
    tabContainer.Position = UDim2.new(0, 0, 0, 40)
    tabContainer.BackgroundTransparency = 1
    tabContainer.Parent = mainFrame
    local UIListLayout = Instance.new("UIListLayout", tabContainer)
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder; UIListLayout.Padding=UDim.new(0,4)
    local pageContainer = Instance.new("Frame")
    pageContainer.Name = "PageContainer"
    pageContainer.Size = UDim2.new(1, -120, 1, -40)
    pageContainer.Position = UDim2.new(0, 120, 0, 40)
    pageContainer.BackgroundTransparency = 1
    pageContainer.Parent = mainFrame
    self.TabContainer = tabContainer; self.PageContainer = pageContainer
    -- Create default settings tab (hidden initially)
    local settingsPage = self:CreateTab("Settings")
    settingsPage.Visible = false; self._settingsPage = settingsPage
    -- Settings controls
    self:AddTextBox(settingsPage, "Library Name", libName, function(txt) title.Text=txt end)
    self:AddKeybind(settingsPage, "Toggle UI", "RightControl", function(key)
        SaveLib.Config.Settings.ToggleKey = key.Name
    end)
    self:AddButton(settingsPage, "Save Config", function()
        print("Config saved:", SaveLib.Config)
    end)
    self:AddButton(settingsPage, "Load Config", function()
        print("Config loaded (demo)")
    end)
    -- Settings toggle logic
    settingsBtn.MouseButton1Click:Connect(function()
        settingsPage.Visible = not settingsPage.Visible
        for _,v in pairs(self.PageContainer:GetChildren()) do
            if v~=settingsPage and v:IsA("ScrollingFrame") then v.Visible=false end
        end
        if settingsPage.Visible then
            settingsBtn.ImageColor3 = Color3.fromRGB(181,1,31)
        else
            settingsBtn.ImageColor3 = Color3.new(1,1,1)
        end
    end)
    return self
end

-- Create a new tab/page
function SaveLib:CreateTab(tabName)
    assert(self.MainFrame, "Call CreateSaveLib first")
    local btn=Instance.new("TextButton") btn.Name=tabName; btn.Size=UDim2.new(1,0,0,28)
    btn.BackgroundColor3=Color3.fromRGB(40,40,40); btn.Font=Enum.Font.Gotham; btn.TextSize=15
    btn.Text=tabName; btn.TextColor3=Color3.new(1,1,1); btn.Parent=self.TabContainer; addCorner(btn,6)
    local page=Instance.new("ScrollingFrame") page.Name=tabName.."Page"; page.Size=UDim2.new(1,0,1,0)
    page.CanvasSize=UDim2.new(0,0,0,0); page.ScrollBarThickness=6; page.BackgroundTransparency=1
    page.Visible=true; page.Parent=self.PageContainer
    local layout=Instance.new("UIListLayout", page); layout.SortOrder=Enum.SortOrder.LayoutOrder; layout.Padding=UDim.new(0,6)
    layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        page.CanvasSize=UDim2.new(0,0,0,layout.AbsoluteContentSize.Y+20)
    end)
    btn.MouseButton1Click:Connect(function()
        for _,v in ipairs(self.PageContainer:GetChildren()) do if v:IsA("ScrollingFrame") then v.Visible=false end end
        page.Visible=true; for _,b in ipairs(self.TabContainer:GetChildren()) do if b:IsA("TextButton") then tween(b,{BackgroundColor3=Color3.fromRGB(40,40,40)}) end end
        tween(btn,{BackgroundColor3=Color3.fromRGB(181,1,31)})
    end)
    table.insert(self.Tabs,{Button=btn,Page=page})
    return page
end

-- [Element methods unchanged: AddButton, AddToggle, AddSlider, AddDropdown, AddColorPicker, AddKeybind, AddTextBox]
-- (Reuse those from prior version) --

return SaveLib
